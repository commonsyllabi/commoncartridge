// Code generated by zek; DO NOT EDIT.

package types

import "encoding/xml"

// Questestinterop was generated 2022-05-10 19:56:34 by pierre on archpierre.
type Questestinterop struct {
	XMLName        xml.Name `xml:"questestinterop"`
	Text           string   `xml:",chardata"`
	Xmlns          string   `xml:"xmlns,attr"`
	Xsi            string   `xml:"xsi,attr"`
	SchemaLocation string   `xml:"schemaLocation,attr"`
	Assessment     struct {
		Text        string `xml:",chardata"`
		Ident       string `xml:"ident,attr"`
		Title       string `xml:"title,attr"`
		Qtimetadata struct {
			Text             string `xml:",chardata"`
			Qtimetadatafield []struct {
				Text       string `xml:",chardata"`
				Fieldlabel string `xml:"fieldlabel"`
				Fieldentry string `xml:"fieldentry"`
			} `xml:"qtimetadatafield"`
		} `xml:"qtimetadata"`
		Section struct {
			Text  string `xml:",chardata"`
			Ident string `xml:"ident,attr"`
			Item  []struct {
				Text         string `xml:",chardata"`
				Ident        string `xml:"ident,attr"`
				Title        string `xml:"title,attr"`
				Itemmetadata struct {
					Text        string `xml:",chardata"`
					Qtimetadata struct {
						Text             string `xml:",chardata"`
						Qtimetadatafield []struct {
							Text       string `xml:",chardata"`
							Fieldlabel string `xml:"fieldlabel"`
							Fieldentry string `xml:"fieldentry"`
						} `xml:"qtimetadatafield"`
					} `xml:"qtimetadata"`
				} `xml:"itemmetadata"`
				Presentation struct {
					Text     string `xml:",chardata"`
					Material struct {
						Text    string `xml:",chardata"`
						Mattext struct {
							Text     string `xml:",chardata"`
							Texttype string `xml:"texttype,attr"`
						} `xml:"mattext"`
					} `xml:"material"`
					ResponseLid struct {
						Text         string `xml:",chardata"`
						Ident        string `xml:"ident,attr"`
						Rcardinality string `xml:"rcardinality,attr"`
						RenderChoice struct {
							Text          string `xml:",chardata"`
							ResponseLabel []struct {
								Text     string `xml:",chardata"`
								Ident    string `xml:"ident,attr"`
								Material struct {
									Text    string `xml:",chardata"`
									Mattext struct {
										Text     string `xml:",chardata"`
										Texttype string `xml:"texttype,attr"`
									} `xml:"mattext"`
								} `xml:"material"`
							} `xml:"response_label"`
						} `xml:"render_choice"`
					} `xml:"response_lid"`
					ResponseStr struct {
						Text         string `xml:",chardata"`
						Ident        string `xml:"ident,attr"`
						Rcardinality string `xml:"rcardinality,attr"`
						RenderFib    struct {
							Text          string `xml:",chardata"`
							ResponseLabel struct {
								Text     string `xml:",chardata"`
								Ident    string `xml:"ident,attr"`
								Rshuffle string `xml:"rshuffle,attr"`
							} `xml:"response_label"`
						} `xml:"render_fib"`
					} `xml:"response_str"`
				} `xml:"presentation"`
				Resprocessing struct {
					Text     string `xml:",chardata"`
					Outcomes struct {
						Text   string `xml:",chardata"`
						Decvar struct {
							Text     string `xml:",chardata"`
							Maxvalue string `xml:"maxvalue,attr"`
							Minvalue string `xml:"minvalue,attr"`
							Varname  string `xml:"varname,attr"`
							Vartype  string `xml:"vartype,attr"`
						} `xml:"decvar"`
					} `xml:"outcomes"`
					Respcondition []struct {
						Text         string `xml:",chardata"`
						Continue     string `xml:"continue,attr"`
						Conditionvar struct {
							Text     string `xml:",chardata"`
							Other    string `xml:"other"`
							Varequal struct {
								Text      string `xml:",chardata"`
								Respident string `xml:"respident,attr"`
							} `xml:"varequal"`
							And struct {
								Text     string `xml:",chardata"`
								Varequal []struct {
									Text      string `xml:",chardata"`
									Respident string `xml:"respident,attr"`
								} `xml:"varequal"`
								Not []struct {
									Text     string `xml:",chardata"`
									Varequal struct {
										Text      string `xml:",chardata"`
										Respident string `xml:"respident,attr"`
									} `xml:"varequal"`
								} `xml:"not"`
							} `xml:"and"`
						} `xml:"conditionvar"`
						Displayfeedback struct {
							Text         string `xml:",chardata"`
							Feedbacktype string `xml:"feedbacktype,attr"`
							Linkrefid    string `xml:"linkrefid,attr"`
						} `xml:"displayfeedback"`
						Setvar struct {
							Text    string `xml:",chardata"`
							Action  string `xml:"action,attr"`
							Varname string `xml:"varname,attr"`
						} `xml:"setvar"`
					} `xml:"respcondition"`
				} `xml:"resprocessing"`
				Itemfeedback []struct {
					Text    string `xml:",chardata"`
					Ident   string `xml:"ident,attr"`
					FlowMat struct {
						Text     string `xml:",chardata"`
						Material struct {
							Text    string `xml:",chardata"`
							Mattext struct {
								Text     string `xml:",chardata"`
								Texttype string `xml:"texttype,attr"`
							} `xml:"mattext"`
						} `xml:"material"`
					} `xml:"flow_mat"`
				} `xml:"itemfeedback"`
			} `xml:"item"`
		} `xml:"section"`
	} `xml:"assessment"`
}
